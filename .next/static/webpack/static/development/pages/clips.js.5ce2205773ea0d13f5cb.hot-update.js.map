{"version":3,"file":"static/webpack/static/development/pages/clips.js.5ce2205773ea0d13f5cb.hot-update.js","sources":["webpack:///./pages/clips.js"],"sourcesContent":["import { Component } from 'react'\nimport Layout from '../components/Layout'\nimport VideoPlayer from '../components/VideoPlayer'\nimport InputField from '../components/InputField'\nimport ActionButton from '../components/ActionButton'\nimport ClipCard from '../components/ClipCard'\nimport InputRange from 'react-input-range'\n\nimport { connect } from 'react-redux'\nimport { addVideoUrl, addClipToClipList } from '../redux/actions'\n\nclass cls extends Component {\n  state = {\n    name: '',\n    value: {\n      min: 2, max: 10\n    }\n  }\n\n  _handleOnchangeInputValue = (e) => this.setState({ name: e.target.value })\n\n  _checkIfInputIsFilled = () => {\n    if (!this.state.name) return true\n    return false\n  }\n\n  _handleRangeChange = (value) => this.setState({ value })\n\n  render () {\n    const { name, value } = this.state\n    const { clips, video: { url }} = this.props.state.vidslice\n    return (\n      <Layout title=\"Clips\">\n        <div className=\"container\">\n          <div className=\"section top-section\">\n            <div className=\"video-player-view\">\n              <VideoPlayer\n                url={url}\n                muted\n                height=\"350px\"\n                width=\"100%\"\n              />\n            </div>\n            <div className=\"form-view\">\n              <div className=\"name-input-view centered\">\n                <InputField\n                  placeholder=\"Write a name for your clip\"\n                  value={name}\n                  onChange={this._handleOnchangeInputValue}\n                />\n              </div>\n              <div className=\"slider-view\">\n                <InputRange\n                  maxValue={20}\n                  minValue={0}\n                  value={value}\n                  onChange={this._handleRangeChange}\n                />\n              </div>\n              <div className=\"button-view centered\">\n                <ActionButton\n                  text=\"Create clip\"\n                  backgroundColor=\"#1abc9c\"\n                  textColor=\"white\"\n                  onClick={() => console.log('pressed button')}\n                  disabled={this._checkIfInputIsFilled()}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"section\">\n            <div className=\"clips-list-view\">\n              {clips.map(clip => (\n                <ClipCard\n                  name=\"Clip\"\n                  duration=\"00:00:45\"\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n        <style jsx>\n          {`\n            .container {\n              display: grid;\n              grid-gap: 20px;\n              grid-template-rows: 350px 300px;\n            }\n\n            .section {\n\n            }\n\n            .top-section {\n              display: grid;\n              grid-gap: 20px;\n              grid-template-columns: 800px auto;\n            }\n\n            .video-player-view {\n              background: black;\n              margin-left: 10px;\n            }\n\n            .top-section .form-view {\n              display: grid;\n              grid-template-rows: repeat(3, auto);\n            }\n\n            .name-input-view {\n\n            }\n\n            .slider-view {\n              display: grid;\n              align-items: center;\n              padding: 20px;\n            }\n\n            .button-view {\n\n            }\n\n            .clips-list-view {\n              padding-top: 20px;\n              padding-left: 10px;\n              padding-right: 10px;\n              display: grid;\n              overflow-x: auto;\n              overflow-y: hidden;\n              grid-gap: 15px;\n              white-space: nowrap;\n            }\n\n            .centered {\n              display: grid;\n              align-items: center;\n              justify-content: center;\n            }\n          `}\n        </style>\n      </Layout>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state\n})\n\nconst mapDispatchToProps = {\n  addVideoUrl,\n  addClipToClipList\n}\n\nconst Clips = connect(mapStateToProps, mapDispatchToProps)(cls)\nexport default Clips\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AADA;AAFA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAxCA;AAAA;AAAA;AAAA;AA+GA;;;;AApIA;AACA;AAsIA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AACA;AAFA;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}